---
apiVersion: v1
kind: Pod
metadata:
  name: db-migrate-<%= deployment_id %>
  labels:
    name: db-migrate-<%= deployment_id %>
    role: command-runner
    app: "devdegree17-interstellar"
    env: "production"
spec:
  activeDeadlineSeconds: 300
  automountServiceAccountToken: false
  restartPolicy: Never
  containers:
  - name: command-runner
    image: gcr.io/shopify-docker-images/apps/production/devdegree17-interstellar:<%= current_sha %>
    args:
    - "/exec"
    - bin/rake
    - db:migrate
    env:
    - name: ENV
      value: "production"
    - name: RAILS_ENV
      value: "production"
    - name: RAILS_LOG_TO_STDOUT
      value: '1'
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: TRACE_PROXY_ADDR
      value: http://$(NODE_NAME):8096/
    - name: STATSD_ADDR
      value: $(NODE_NAME):8125
    - name: STATSD_IMPLEMENTATION
      value: datadog
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: database-url
          key: DATABASE_URL
    - name: KAFKA_CLIENT_CERT
      value: "/ssl/kafka-client/tls.crt"
    - name: KAFKA_CLIENT_KEY
      value: "/ssl/kafka-client/tls.key"
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 2Gi
    volumeMounts:
    - name: ejson-keys
      mountPath: "/key"
      readOnly: true
    - name: kafka-client
      mountPath: "/ssl/kafka-client"
      readOnly: true
  volumes:
  - name: kafka-client
    secret:
      secretName: kafka-client
  - name: ejson-keys
    secret:
      secretName: ejson-keys
